# This file is subject to the terms and conditions defined in file 'LICENSE',
# which is part of this repository.
---
- name: Install required packages
  package:
    name: "{{ item }}"
    state: present
  become: true
  with_items:
    - haveged

- name: Start/enable required services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  become: true
  with_items:
    - haveged

- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ operator_user }}"
    group: "{{ operator_user }}"
    mode: 0750
  become: true
  with_items:
    - "{{ aptly_configuration_directory }}"
    - "{{ aptly_database_directory }}"
    - "{{ aptly_storage_directory }}"

- name: Copy configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0640
    owner: "{{ operator_user }}"
    group: "{{ operator_user }}"
  with_items:
    - src: aptly/aptly.conf.j2
      dest: "{{ aptly_configuration_directory }}/aptly.conf"

- name: Run service
  docker_service:
    project_name: aptly
    definition:
      version: '2'
      services:
        aptly:
          restart: unless-stopped
          image: "{{ aptly_docker_image }}"
          environment:
            FULL_NAME: "{{ aptly_configuration['full_name'] }}"
            EMAIL_ADDRESS: "{{ aptly_configuration['email_address'] }}"
            GPG_PASSWORD: "{{ aptly_configuration['gpg_password'] }}"
          volumes:
            - "{{ aptly_configuration_directory }}/aptly.conf:/etc/aptly.conf"
            - "{{ aptly_database_directory }}:/opt/aptly/db"
            - "{{ aptly_storage_directory }}:/opt/aptly"
        nginx:
          restart: unless-stopped
          image: "{{ aptly_nginx_docker_image }}"
          volumes:
            - "{{ aptly_storage_directory }}/public:/usr/share/nginx/html"
          ports:
            - "{{ aptly_nginx_host }}:{{ aptly_nginx_port }}:80"

# NOTE: This is an ugly workaround to not provide our own nginx configuration/image

- name: Enable autoindex in nginx contaiener
  command: docker exec -t aptly_nginx_1 sed -i 'N; s/root   \/usr\/share\/nginx\/html;\n        index  index.html index.htm;/root   \/usr\/share\/nginx\/html;\n        autoindex on;/' /etc/nginx/conf.d/default.conf

- name: Restart nginx container
  command: docker restart aptly_nginx_1
